<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="/styles.css">
<%- include('../partials/customerHeader', { customerName: customerName }) %>

<body>
  <h1>Confirm Your Order</h1>

  <div class="meal-container container px-4 py-5">
    <% if (cartItems.length > 0) { %>
      <div class="row g-4">
        <% cartItems.forEach(item => { %>
          <div class="meal-card col-12 col-md-4" data-seller-id="<%= item.seller_id %>">
            <div class="meal-content card flex-fill">
              <div class="img-box">
                <% if (item.image_url) { %>
                  <img class="card-img-top meal-img fixed-size" src="<%= item.image_url %>" alt="<%= item.name %>">
                <% } %>
              </div>
              <div class="card-body">
                <h5 class="meal-name card-title"><%= item.name %></h5>
                <p class="card-text"><strong>Price:</strong> ₹<span class="meal-price"><%= item.price %></span></p>
                <p class="card-text"><strong>Contents:</strong> <%= item.contents %></p>
                <p class="card-text"><strong>Preparation Time:</strong> <%= item.prep_time %></p>
                <p class="card-text"><strong>Seller:</strong> <%= item.seller_name %></p>
              </div>
            </div>
          </div>
        <% }) %>
      </div>  
    </div>

    <div class="container mb-4"> 
      <div class="location-info text-center">
        <p class="fw-bold">Choose Delivery Location:</p>
        
        <div class="form-check form-check-inline"> 
          <input type="checkbox" class="form-check-input" id="use-current-location" onchange="toggleAddressInput()">
          <label class="form-check-label" for="use-current-location">Use my current location: <%= customerLocation %></label>
        </div>
        
        <div id="new-address-container" class="mt-3">
          <p>Or enter a new delivery address:</p>
          <input type="text" class="form-control" id="delivery-address" placeholder="Enter your delivery address">
        </div>
      </div>
    
      <div class="text-center"> 
        <button id="pay-button" class="btn btn-primary" style="margin-top: 20px;" disabled>Pay</button>
      </div>
    </div>
    
    <% } else { %>
      <h2>Your cart is empty.</h2>
    <% } %>

  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>
    
document.getElementById('pay-button').onclick = async function (e) {
  e.preventDefault();

  const totalAmount = Math.round(await calculateTotalAmount() * 100); // Total in paise
  const deliveryAddress = document.getElementById('use-current-location').checked ? "<%= customerLocation %>" : document.getElementById('delivery-address').value;

  if (!deliveryAddress) {
    alert('Please select or enter a delivery location.');
    return;
  }

  const mealCards = document.querySelectorAll('.meal-card');
  const meals = Array.from(mealCards).map(card => ({
    name: card.querySelector('.meal-name').innerText,
    price: parseFloat(card.querySelector('.meal-price').innerText.replace('₹', '').trim()),
    sellerId: card.getAttribute('data-seller-id')
  }));

  fetch('/create-orders', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      meals: meals,
      address: deliveryAddress,
      totalAmount: totalAmount // Pass the correct total amount
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.error) {
      console.error('Error creating Razorpay order:', data.error);
      alert('Error: ' + data.error.description);
      return;
    }
    
    const options = {
      "key": "<%= process.env.RAZORPAY_KEY_ID %>",
      "amount": data.amount, // Amount in paise
      "order_id": data.id,
      "handler": function (response) {
        fetch('/payment-confirmations', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            paymentId: response.razorpay_payment_id,
            orderId: response.razorpay_order_id
          })
        })
        .then(() => window.location.href = '/payment-confirmations');
      }
    };
    const rzp1 = new Razorpay(options);
    rzp1.open();
  })
  .catch(error => console.error('Error:', error));
};
function calculateTotalAmount() {
  let total = 0;
  document.querySelectorAll('.meal-price').forEach(function (priceElement) {
    const price = parseFloat(priceElement.innerText.replace('₹', '').trim());
    total += price;
  });
  
  return total; // This will return the total amount in rupees
}


    function toggleAddressInput() {
      const useCurrentLocation = document.getElementById('use-current-location');
      const newAddressContainer = document.getElementById('new-address-container');
      const payButton = document.getElementById('pay-button');

      if (useCurrentLocation.checked) {
        newAddressContainer.style.display = 'none';
        payButton.disabled = false;
        document.getElementById('location-error').style.display = 'none';
      } else {
        newAddressContainer.style.display = 'block';
        validateLocation();
      }
    }

    function validateLocation() {
      const newAddress = document.getElementById('delivery-address').value.trim();
      const payButton = document.getElementById('pay-button');
      const locationError = document.getElementById('location-error');

      if (newAddress) {
        payButton.disabled = false;
        locationError.style.display = 'none';
      } else {
        payButton.disabled = true;
      }
    }
    document.getElementById('delivery-address').addEventListener('input', validateLocation);
    toggleAddressInput();
  </script>
</body>

<%- include('../partials/footer') %> 